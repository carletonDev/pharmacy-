/*
 * This file is generated by jOOQ.
 */
package PharmacyDataAccess.tables.pojos;


import PharmacyDataAccess.tables.interfaces.IPharmacymedicine;

import javax.annotation.processing.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "PharmacyMedicine", schema = "dbo", uniqueConstraints = {
    @UniqueConstraint(name = "PK_PharmacyMedicine", columnNames = {"pmid"})
})
public class Pharmacymedicine implements IPharmacymedicine {

    private static final long serialVersionUID = 679510144;

    private Object pmid;
    private Object instock;
    private Object medicineid;
    private Object pharmacyid;

    public Pharmacymedicine() {}

    public Pharmacymedicine(IPharmacymedicine value) {
        this.pmid = value.getPmid();
        this.instock = value.getInstock();
        this.medicineid = value.getMedicineid();
        this.pharmacyid = value.getPharmacyid();
    }

    public Pharmacymedicine(
        Object pmid,
        Object instock,
        Object medicineid,
        Object pharmacyid
    ) {
        this.pmid = pmid;
        this.instock = instock;
        this.medicineid = medicineid;
        this.pharmacyid = pharmacyid;
    }


    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    @Id
    @Column(name = "pmid")
    @Override
    public Object getPmid() {
        return this.pmid;
    }


    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public void setPmid(Object pmid) {
        this.pmid = pmid;
    }


    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    @Column(name = "inStock")
    @Override
    public Object getInstock() {
        return this.instock;
    }


    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public void setInstock(Object instock) {
        this.instock = instock;
    }


    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    @Column(name = "medicineId")
    @Override
    public Object getMedicineid() {
        return this.medicineid;
    }


    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public void setMedicineid(Object medicineid) {
        this.medicineid = medicineid;
    }


    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    @Column(name = "pharmacyId")
    @Override
    public Object getPharmacyid() {
        return this.pharmacyid;
    }


    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public void setPharmacyid(Object pharmacyid) {
        this.pharmacyid = pharmacyid;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Pharmacymedicine (");

        sb.append(pmid);
        sb.append(", ").append(instock);
        sb.append(", ").append(medicineid);
        sb.append(", ").append(pharmacyid);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IPharmacymedicine from) {
        setPmid(from.getPmid());
        setInstock(from.getInstock());
        setMedicineid(from.getMedicineid());
        setPharmacyid(from.getPharmacyid());
    }

    @Override
    public <E extends IPharmacymedicine> E into(E into) {
        into.from(this);
        return into;
    }
}
