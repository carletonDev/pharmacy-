/*
 * This file is generated by jOOQ.
 */
package PharmacyDataAccess.tables.pojos;


import PharmacyDataAccess.tables.interfaces.ISalary;

import javax.annotation.processing.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "Salary", schema = "dbo", uniqueConstraints = {
    @UniqueConstraint(name = "PK_Salary", columnNames = {"salaryId"})
})
public class Salary implements ISalary {

    private static final long serialVersionUID = 1296404079;

    private Object salaryid;
    private Object employeeid;
    private Object statedate;
    private Object enddate;

    public Salary() {}

    public Salary(ISalary value) {
        this.salaryid = value.getSalaryid();
        this.employeeid = value.getEmployeeid();
        this.statedate = value.getStatedate();
        this.enddate = value.getEnddate();
    }

    public Salary(
        Object salaryid,
        Object employeeid,
        Object statedate,
        Object enddate
    ) {
        this.salaryid = salaryid;
        this.employeeid = employeeid;
        this.statedate = statedate;
        this.enddate = enddate;
    }


    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    @Id
    @Column(name = "salaryId")
    @Override
    public Object getSalaryid() {
        return this.salaryid;
    }


    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public void setSalaryid(Object salaryid) {
        this.salaryid = salaryid;
    }


    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    @Column(name = "employeeId")
    @Override
    public Object getEmployeeid() {
        return this.employeeid;
    }


    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public void setEmployeeid(Object employeeid) {
        this.employeeid = employeeid;
    }


    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    @Column(name = "stateDate")
    @Override
    public Object getStatedate() {
        return this.statedate;
    }


    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public void setStatedate(Object statedate) {
        this.statedate = statedate;
    }


    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    @Column(name = "endDate")
    @Override
    public Object getEnddate() {
        return this.enddate;
    }


    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public void setEnddate(Object enddate) {
        this.enddate = enddate;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Salary (");

        sb.append(salaryid);
        sb.append(", ").append(employeeid);
        sb.append(", ").append(statedate);
        sb.append(", ").append(enddate);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(ISalary from) {
        setSalaryid(from.getSalaryid());
        setEmployeeid(from.getEmployeeid());
        setStatedate(from.getStatedate());
        setEnddate(from.getEnddate());
    }

    @Override
    public <E extends ISalary> E into(E into) {
        into.from(this);
        return into;
    }
}
