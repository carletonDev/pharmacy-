/*
 * This file is generated by jOOQ.
 */
package PharmacyDataAccess.tables.pojos;


import PharmacyDataAccess.tables.interfaces.IRoles;

import javax.annotation.processing.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "Roles", schema = "dbo", uniqueConstraints = {
    @UniqueConstraint(name = "PK_Roles", columnNames = {"roleId"})
})
public class Roles implements IRoles {

    private static final long serialVersionUID = 1089384485;

    private Object roleid;
    private String roletype;

    public Roles() {}

    public Roles(IRoles value) {
        this.roleid = value.getRoleid();
        this.roletype = value.getRoletype();
    }

    public Roles(
        Object roleid,
        String roletype
    ) {
        this.roleid = roleid;
        this.roletype = roletype;
    }


    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    @Id
    @Column(name = "roleId")
    @Override
    public Object getRoleid() {
        return this.roleid;
    }


    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public void setRoleid(Object roleid) {
        this.roleid = roleid;
    }

    @Column(name = "roleType", length = 50)
    @Override
    public String getRoletype() {
        return this.roletype;
    }

    @Override
    public void setRoletype(String roletype) {
        this.roletype = roletype;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Roles (");

        sb.append(roleid);
        sb.append(", ").append(roletype);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IRoles from) {
        setRoleid(from.getRoleid());
        setRoletype(from.getRoletype());
    }

    @Override
    public <E extends IRoles> E into(E into) {
        into.from(this);
        return into;
    }
}
