/*
 * This file is generated by jOOQ.
 */
package PharmacyDataAccess.tables.records;


import PharmacyDataAccess.tables.Pharmacy;
import PharmacyDataAccess.tables.interfaces.IPharmacy;

import javax.annotation.processing.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "Pharmacy", schema = "dbo", uniqueConstraints = {
    @UniqueConstraint(name = "PK_Pharmacy", columnNames = {"pharmacyId"})
})
public class PharmacyRecord extends UpdatableRecordImpl<PharmacyRecord> implements Record5<Object, String, String, String, Object>, IPharmacy {

    private static final long serialVersionUID = 202842358;

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public void setPharmacyid(Object value) {
        set(0, value);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    @Id
    @Column(name = "pharmacyId")
    @Override
    public Object getPharmacyid() {
        return get(0);
    }

    /**
     * Setter for <code>dbo.Pharmacy.city</code>.
     */
    @Override
    public void setCity(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>dbo.Pharmacy.city</code>.
     */
    @Column(name = "city", length = 50)
    @Override
    public String getCity() {
        return (String) get(1);
    }

    /**
     * Setter for <code>dbo.Pharmacy.pharmacyAddress</code>.
     */
    @Override
    public void setPharmacyaddress(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>dbo.Pharmacy.pharmacyAddress</code>.
     */
    @Column(name = "pharmacyAddress", length = 50)
    @Override
    public String getPharmacyaddress() {
        return (String) get(2);
    }

    /**
     * Setter for <code>dbo.Pharmacy.state</code>.
     */
    @Override
    public void setState(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>dbo.Pharmacy.state</code>.
     */
    @Column(name = "state", length = 30)
    @Override
    public String getState() {
        return (String) get(3);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public void setZip(Object value) {
        set(4, value);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    @Column(name = "zip")
    @Override
    public Object getZip() {
        return get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Object> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Object, String, String, String, Object> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Object, String, String, String, Object> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public Field<Object> field1() {
        return Pharmacy.PHARMACY.PHARMACYID;
    }

    @Override
    public Field<String> field2() {
        return Pharmacy.PHARMACY.CITY;
    }

    @Override
    public Field<String> field3() {
        return Pharmacy.PHARMACY.PHARMACYADDRESS;
    }

    @Override
    public Field<String> field4() {
        return Pharmacy.PHARMACY.STATE;
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public Field<Object> field5() {
        return Pharmacy.PHARMACY.ZIP;
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public Object component1() {
        return getPharmacyid();
    }

    @Override
    public String component2() {
        return getCity();
    }

    @Override
    public String component3() {
        return getPharmacyaddress();
    }

    @Override
    public String component4() {
        return getState();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public Object component5() {
        return getZip();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public Object value1() {
        return getPharmacyid();
    }

    @Override
    public String value2() {
        return getCity();
    }

    @Override
    public String value3() {
        return getPharmacyaddress();
    }

    @Override
    public String value4() {
        return getState();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public Object value5() {
        return getZip();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public PharmacyRecord value1(Object value) {
        setPharmacyid(value);
        return this;
    }

    @Override
    public PharmacyRecord value2(String value) {
        setCity(value);
        return this;
    }

    @Override
    public PharmacyRecord value3(String value) {
        setPharmacyaddress(value);
        return this;
    }

    @Override
    public PharmacyRecord value4(String value) {
        setState(value);
        return this;
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public PharmacyRecord value5(Object value) {
        setZip(value);
        return this;
    }

    @Override
    public PharmacyRecord values(Object value1, String value2, String value3, String value4, Object value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IPharmacy from) {
        setPharmacyid(from.getPharmacyid());
        setCity(from.getCity());
        setPharmacyaddress(from.getPharmacyaddress());
        setState(from.getState());
        setZip(from.getZip());
    }

    @Override
    public <E extends IPharmacy> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PharmacyRecord
     */
    public PharmacyRecord() {
        super(Pharmacy.PHARMACY);
    }

    /**
     * Create a detached, initialised PharmacyRecord
     */
    public PharmacyRecord(Object pharmacyid, String city, String pharmacyaddress, String state, Object zip) {
        super(Pharmacy.PHARMACY);

        set(0, pharmacyid);
        set(1, city);
        set(2, pharmacyaddress);
        set(3, state);
        set(4, zip);
    }
}
