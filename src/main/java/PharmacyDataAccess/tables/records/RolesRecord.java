/*
 * This file is generated by jOOQ.
 */
package PharmacyDataAccess.tables.records;


import PharmacyDataAccess.tables.Roles;
import PharmacyDataAccess.tables.interfaces.IRoles;

import javax.annotation.processing.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "Roles", schema = "dbo", uniqueConstraints = {
    @UniqueConstraint(name = "PK_Roles", columnNames = {"roleId"})
})
public class RolesRecord extends UpdatableRecordImpl<RolesRecord> implements Record2<Object, String>, IRoles {

    private static final long serialVersionUID = 1181171628;

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public void setRoleid(Object value) {
        set(0, value);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    @Id
    @Column(name = "roleId")
    @Override
    public Object getRoleid() {
        return get(0);
    }

    /**
     * Setter for <code>dbo.Roles.roleType</code>.
     */
    @Override
    public void setRoletype(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>dbo.Roles.roleType</code>.
     */
    @Column(name = "roleType", length = 50)
    @Override
    public String getRoletype() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Object> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Object, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Object, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public Field<Object> field1() {
        return Roles.ROLES.ROLEID;
    }

    @Override
    public Field<String> field2() {
        return Roles.ROLES.ROLETYPE;
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public Object component1() {
        return getRoleid();
    }

    @Override
    public String component2() {
        return getRoletype();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public Object value1() {
        return getRoleid();
    }

    @Override
    public String value2() {
        return getRoletype();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public RolesRecord value1(Object value) {
        setRoleid(value);
        return this;
    }

    @Override
    public RolesRecord value2(String value) {
        setRoletype(value);
        return this;
    }

    @Override
    public RolesRecord values(Object value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IRoles from) {
        setRoleid(from.getRoleid());
        setRoletype(from.getRoletype());
    }

    @Override
    public <E extends IRoles> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RolesRecord
     */
    public RolesRecord() {
        super(Roles.ROLES);
    }

    /**
     * Create a detached, initialised RolesRecord
     */
    public RolesRecord(Object roleid, String roletype) {
        super(Roles.ROLES);

        set(0, roleid);
        set(1, roletype);
    }
}
