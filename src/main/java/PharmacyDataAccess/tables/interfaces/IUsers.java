/*
 * This file is generated by jOOQ.
 */
package PharmacyDataAccess.tables.interfaces;


import java.io.Serializable;

import javax.annotation.processing.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "Users", schema = "dbo", uniqueConstraints = {
    @UniqueConstraint(name = "PK_Users", columnNames = {"userId"})
})
public interface IUsers extends Serializable {

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public void setUserid(Object value);

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    @Id
    @Column(name = "userId")
    public Object getUserid();

    /**
     * Setter for <code>dbo.Users.city</code>.
     */
    public void setCity(String value);

    /**
     * Getter for <code>dbo.Users.city</code>.
     */
    @Column(name = "city", length = 50)
    public String getCity();

    /**
     * Setter for <code>dbo.Users.firstName</code>.
     */
    public void setFirstname(String value);

    /**
     * Getter for <code>dbo.Users.firstName</code>.
     */
    @Column(name = "firstName", length = 50)
    public String getFirstname();

    /**
     * Setter for <code>dbo.Users.lastName</code>.
     */
    public void setLastname(String value);

    /**
     * Getter for <code>dbo.Users.lastName</code>.
     */
    @Column(name = "lastName", length = 50)
    public String getLastname();

    /**
     * Setter for <code>dbo.Users.state</code>.
     */
    public void setState(String value);

    /**
     * Getter for <code>dbo.Users.state</code>.
     */
    @Column(name = "state", length = 30)
    public String getState();

    /**
     * Setter for <code>dbo.Users.userAddress</code>.
     */
    public void setUseraddress(String value);

    /**
     * Getter for <code>dbo.Users.userAddress</code>.
     */
    @Column(name = "userAddress", length = 50)
    public String getUseraddress();

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public void setZip(Object value);

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    @Column(name = "zip")
    public Object getZip();

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public void setRoleid(Object value);

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    @Column(name = "roleId")
    public Object getRoleid();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common interface IUsers
     */
    public void from(PharmacyDataAccess.tables.interfaces.IUsers from);

    /**
     * Copy data into another generated Record/POJO implementing the common interface IUsers
     */
    public <E extends PharmacyDataAccess.tables.interfaces.IUsers> E into(E into);
}
