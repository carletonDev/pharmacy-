/*
 * This file is generated by jOOQ.
 */
package Pharmacy.dbo.tables.daos;


import Pharmacy.dbo.tables.Medicine;
import Pharmacy.dbo.tables.records.MedicineRecord;

import java.math.BigDecimal;
import java.util.List;

import javax.annotation.processing.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class MedicineDao extends DAOImpl<MedicineRecord, Pharmacy.dbo.tables.pojos.Medicine, Object> {

    /**
     * Create a new MedicineDao without any configuration
     */
    public MedicineDao() {
        super(Medicine.MEDICINE, Pharmacy.dbo.tables.pojos.Medicine.class);
    }

    /**
     * Create a new MedicineDao with an attached configuration
     */
    @Autowired
    public MedicineDao(Configuration configuration) {
        super(Medicine.MEDICINE, Pharmacy.dbo.tables.pojos.Medicine.class, configuration);
    }

    @Override
    public Object getId(Pharmacy.dbo.tables.pojos.Medicine object) {
        return object.getMedicineid();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public List<Pharmacy.dbo.tables.pojos.Medicine> fetchRangeOfMedicineid(Object lowerInclusive, Object upperInclusive) {
        return fetchRange(Medicine.MEDICINE.MEDICINEID, lowerInclusive, upperInclusive);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public List<Pharmacy.dbo.tables.pojos.Medicine> fetchByMedicineid(Object... values) {
        return fetch(Medicine.MEDICINE.MEDICINEID, values);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public Pharmacy.dbo.tables.pojos.Medicine fetchOneByMedicineid(Object value) {
        return fetchOne(Medicine.MEDICINE.MEDICINEID, value);
    }

    /**
     * Fetch records that have <code>cost BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<Pharmacy.dbo.tables.pojos.Medicine> fetchRangeOfCost(BigDecimal lowerInclusive, BigDecimal upperInclusive) {
        return fetchRange(Medicine.MEDICINE.COST, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>cost IN (values)</code>
     */
    public List<Pharmacy.dbo.tables.pojos.Medicine> fetchByCost(BigDecimal... values) {
        return fetch(Medicine.MEDICINE.COST, values);
    }

    /**
     * Fetch records that have <code>medicineName BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<Pharmacy.dbo.tables.pojos.Medicine> fetchRangeOfMedicinename(String lowerInclusive, String upperInclusive) {
        return fetchRange(Medicine.MEDICINE.MEDICINENAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>medicineName IN (values)</code>
     */
    public List<Pharmacy.dbo.tables.pojos.Medicine> fetchByMedicinename(String... values) {
        return fetch(Medicine.MEDICINE.MEDICINENAME, values);
    }
}
