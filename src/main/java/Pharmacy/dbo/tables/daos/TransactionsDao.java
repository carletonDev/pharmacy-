/*
 * This file is generated by jOOQ.
 */
package Pharmacy.dbo.tables.daos;


import Pharmacy.dbo.tables.Transactions;
import Pharmacy.dbo.tables.records.TransactionsRecord;

import java.math.BigDecimal;
import java.util.List;

import javax.annotation.processing.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class TransactionsDao extends DAOImpl<TransactionsRecord, Pharmacy.dbo.tables.pojos.Transactions, Object> {

    /**
     * Create a new TransactionsDao without any configuration
     */
    public TransactionsDao() {
        super(Transactions.TRANSACTIONS, Pharmacy.dbo.tables.pojos.Transactions.class);
    }

    /**
     * Create a new TransactionsDao with an attached configuration
     */
    @Autowired
    public TransactionsDao(Configuration configuration) {
        super(Transactions.TRANSACTIONS, Pharmacy.dbo.tables.pojos.Transactions.class, configuration);
    }

    @Override
    public Object getId(Pharmacy.dbo.tables.pojos.Transactions object) {
        return object.getTransactionid();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public List<Pharmacy.dbo.tables.pojos.Transactions> fetchRangeOfTransactionid(Object lowerInclusive, Object upperInclusive) {
        return fetchRange(Transactions.TRANSACTIONS.TRANSACTIONID, lowerInclusive, upperInclusive);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public List<Pharmacy.dbo.tables.pojos.Transactions> fetchByTransactionid(Object... values) {
        return fetch(Transactions.TRANSACTIONS.TRANSACTIONID, values);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public Pharmacy.dbo.tables.pojos.Transactions fetchOneByTransactionid(Object value) {
        return fetchOne(Transactions.TRANSACTIONS.TRANSACTIONID, value);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public List<Pharmacy.dbo.tables.pojos.Transactions> fetchRangeOfCustomerid(Object lowerInclusive, Object upperInclusive) {
        return fetchRange(Transactions.TRANSACTIONS.CUSTOMERID, lowerInclusive, upperInclusive);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public List<Pharmacy.dbo.tables.pojos.Transactions> fetchByCustomerid(Object... values) {
        return fetch(Transactions.TRANSACTIONS.CUSTOMERID, values);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public List<Pharmacy.dbo.tables.pojos.Transactions> fetchRangeOfEmployeeid(Object lowerInclusive, Object upperInclusive) {
        return fetchRange(Transactions.TRANSACTIONS.EMPLOYEEID, lowerInclusive, upperInclusive);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public List<Pharmacy.dbo.tables.pojos.Transactions> fetchByEmployeeid(Object... values) {
        return fetch(Transactions.TRANSACTIONS.EMPLOYEEID, values);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public List<Pharmacy.dbo.tables.pojos.Transactions> fetchRangeOfDatetrasaction(Object lowerInclusive, Object upperInclusive) {
        return fetchRange(Transactions.TRANSACTIONS.DATETRASACTION, lowerInclusive, upperInclusive);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public List<Pharmacy.dbo.tables.pojos.Transactions> fetchByDatetrasaction(Object... values) {
        return fetch(Transactions.TRANSACTIONS.DATETRASACTION, values);
    }

    /**
     * Fetch records that have <code>amount BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<Pharmacy.dbo.tables.pojos.Transactions> fetchRangeOfAmount(BigDecimal lowerInclusive, BigDecimal upperInclusive) {
        return fetchRange(Transactions.TRANSACTIONS.AMOUNT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>amount IN (values)</code>
     */
    public List<Pharmacy.dbo.tables.pojos.Transactions> fetchByAmount(BigDecimal... values) {
        return fetch(Transactions.TRANSACTIONS.AMOUNT, values);
    }
}
