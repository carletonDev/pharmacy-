/*
 * This file is generated by jOOQ.
 */
package Pharmacy.dbo.tables.pojos;


import Pharmacy.dbo.tables.interfaces.IMedicine;

import java.math.BigDecimal;

import javax.annotation.processing.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "Medicine", schema = "dbo", uniqueConstraints = {
    @UniqueConstraint(name = "PK_Medicine", columnNames = {"medicineId"})
})
public class Medicine implements IMedicine {

    private static final long serialVersionUID = 1383577072;

    private Object     medicineid;
    private BigDecimal cost;
    private String     medicinename;

    public Medicine() {}

    public Medicine(IMedicine value) {
        this.medicineid = value.getMedicineid();
        this.cost = value.getCost();
        this.medicinename = value.getMedicinename();
    }

    public Medicine(
        Object     medicineid,
        BigDecimal cost,
        String     medicinename
    ) {
        this.medicineid = medicineid;
        this.cost = cost;
        this.medicinename = medicinename;
    }


    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    @Id
    @Column(name = "medicineId")
    @Override
    public Object getMedicineid() {
        return this.medicineid;
    }


    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public void setMedicineid(Object medicineid) {
        this.medicineid = medicineid;
    }

    @Column(name = "cost", precision = 10, scale = 2)
    @Override
    public BigDecimal getCost() {
        return this.cost;
    }

    @Override
    public void setCost(BigDecimal cost) {
        this.cost = cost;
    }

    @Column(name = "medicineName", length = 50)
    @Override
    public String getMedicinename() {
        return this.medicinename;
    }

    @Override
    public void setMedicinename(String medicinename) {
        this.medicinename = medicinename;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Medicine (");

        sb.append(medicineid);
        sb.append(", ").append(cost);
        sb.append(", ").append(medicinename);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IMedicine from) {
        setMedicineid(from.getMedicineid());
        setCost(from.getCost());
        setMedicinename(from.getMedicinename());
    }

    @Override
    public <E extends IMedicine> E into(E into) {
        into.from(this);
        return into;
    }
}
