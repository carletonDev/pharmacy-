/*
 * This file is generated by jOOQ.
 */
package Pharmacy.dbo.tables.pojos;


import Pharmacy.dbo.tables.interfaces.IPharmacy;

import javax.annotation.processing.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "Pharmacy", schema = "dbo", uniqueConstraints = {
    @UniqueConstraint(name = "PK_Pharmacy", columnNames = {"pharmacyId"})
})
public class Pharmacy implements IPharmacy {

    private static final long serialVersionUID = -1110962531;

    private Object pharmacyid;
    private String city;
    private String pharmacyaddress;
    private String state;
    private Object zip;

    public Pharmacy() {}

    public Pharmacy(IPharmacy value) {
        this.pharmacyid = value.getPharmacyid();
        this.city = value.getCity();
        this.pharmacyaddress = value.getPharmacyaddress();
        this.state = value.getState();
        this.zip = value.getZip();
    }

    public Pharmacy(
        Object pharmacyid,
        String city,
        String pharmacyaddress,
        String state,
        Object zip
    ) {
        this.pharmacyid = pharmacyid;
        this.city = city;
        this.pharmacyaddress = pharmacyaddress;
        this.state = state;
        this.zip = zip;
    }


    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    @Id
    @Column(name = "pharmacyId")
    @Override
    public Object getPharmacyid() {
        return this.pharmacyid;
    }


    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public void setPharmacyid(Object pharmacyid) {
        this.pharmacyid = pharmacyid;
    }

    @Column(name = "city", length = 50)
    @Override
    public String getCity() {
        return this.city;
    }

    @Override
    public void setCity(String city) {
        this.city = city;
    }

    @Column(name = "pharmacyAddress", length = 50)
    @Override
    public String getPharmacyaddress() {
        return this.pharmacyaddress;
    }

    @Override
    public void setPharmacyaddress(String pharmacyaddress) {
        this.pharmacyaddress = pharmacyaddress;
    }

    @Column(name = "state", length = 30)
    @Override
    public String getState() {
        return this.state;
    }

    @Override
    public void setState(String state) {
        this.state = state;
    }


    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    @Column(name = "zip")
    @Override
    public Object getZip() {
        return this.zip;
    }


    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public void setZip(Object zip) {
        this.zip = zip;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Pharmacy (");

        sb.append(pharmacyid);
        sb.append(", ").append(city);
        sb.append(", ").append(pharmacyaddress);
        sb.append(", ").append(state);
        sb.append(", ").append(zip);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IPharmacy from) {
        setPharmacyid(from.getPharmacyid());
        setCity(from.getCity());
        setPharmacyaddress(from.getPharmacyaddress());
        setState(from.getState());
        setZip(from.getZip());
    }

    @Override
    public <E extends IPharmacy> E into(E into) {
        into.from(this);
        return into;
    }
}
