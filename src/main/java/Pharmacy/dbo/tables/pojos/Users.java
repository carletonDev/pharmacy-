/*
 * This file is generated by jOOQ.
 */
package Pharmacy.dbo.tables.pojos;


import Pharmacy.dbo.tables.interfaces.IUsers;

import javax.annotation.processing.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "Users", schema = "dbo", uniqueConstraints = {
    @UniqueConstraint(name = "PK_Users", columnNames = {"userId"})
})
public class Users implements IUsers {

    private static final long serialVersionUID = -1892927526;

    private Object userid;
    private String city;
    private String firstname;
    private String lastname;
    private String state;
    private String useraddress;
    private Object zip;
    private Object roleid;

    public Users() {}

    public Users(IUsers value) {
        this.userid = value.getUserid();
        this.city = value.getCity();
        this.firstname = value.getFirstname();
        this.lastname = value.getLastname();
        this.state = value.getState();
        this.useraddress = value.getUseraddress();
        this.zip = value.getZip();
        this.roleid = value.getRoleid();
    }

    public Users(
        Object userid,
        String city,
        String firstname,
        String lastname,
        String state,
        String useraddress,
        Object zip,
        Object roleid
    ) {
        this.userid = userid;
        this.city = city;
        this.firstname = firstname;
        this.lastname = lastname;
        this.state = state;
        this.useraddress = useraddress;
        this.zip = zip;
        this.roleid = roleid;
    }


    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    @Id
    @Column(name = "userId")
    @Override
    public Object getUserid() {
        return this.userid;
    }


    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public void setUserid(Object userid) {
        this.userid = userid;
    }

    @Column(name = "city", length = 50)
    @Override
    public String getCity() {
        return this.city;
    }

    @Override
    public void setCity(String city) {
        this.city = city;
    }

    @Column(name = "firstName", length = 50)
    @Override
    public String getFirstname() {
        return this.firstname;
    }

    @Override
    public void setFirstname(String firstname) {
        this.firstname = firstname;
    }

    @Column(name = "lastName", length = 50)
    @Override
    public String getLastname() {
        return this.lastname;
    }

    @Override
    public void setLastname(String lastname) {
        this.lastname = lastname;
    }

    @Column(name = "state", length = 30)
    @Override
    public String getState() {
        return this.state;
    }

    @Override
    public void setState(String state) {
        this.state = state;
    }

    @Column(name = "userAddress", length = 50)
    @Override
    public String getUseraddress() {
        return this.useraddress;
    }

    @Override
    public void setUseraddress(String useraddress) {
        this.useraddress = useraddress;
    }


    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    @Column(name = "zip")
    @Override
    public Object getZip() {
        return this.zip;
    }


    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public void setZip(Object zip) {
        this.zip = zip;
    }


    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    @Column(name = "roleId")
    @Override
    public Object getRoleid() {
        return this.roleid;
    }


    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    @Override
    public void setRoleid(Object roleid) {
        this.roleid = roleid;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Users (");

        sb.append(userid);
        sb.append(", ").append(city);
        sb.append(", ").append(firstname);
        sb.append(", ").append(lastname);
        sb.append(", ").append(state);
        sb.append(", ").append(useraddress);
        sb.append(", ").append(zip);
        sb.append(", ").append(roleid);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IUsers from) {
        setUserid(from.getUserid());
        setCity(from.getCity());
        setFirstname(from.getFirstname());
        setLastname(from.getLastname());
        setState(from.getState());
        setUseraddress(from.getUseraddress());
        setZip(from.getZip());
        setRoleid(from.getRoleid());
    }

    @Override
    public <E extends IUsers> E into(E into) {
        into.from(this);
        return into;
    }
}
